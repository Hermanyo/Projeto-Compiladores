/* This file was generated by SableCC (http://www.sablecc.org/). */

package calculadora.node;

import calculadora.analysis.*;

@SuppressWarnings("nls")
public final class ACodePrograma extends PPrograma
{
    private TCode _code_;
    private TId _id_;
    private PBloco _bloco_;

    public ACodePrograma()
    {
        // Constructor
    }

    public ACodePrograma(
        @SuppressWarnings("hiding") TCode _code_,
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") PBloco _bloco_)
    {
        // Constructor
        setCode(_code_);

        setId(_id_);

        setBloco(_bloco_);

    }

    @Override
    public Object clone()
    {
        return new ACodePrograma(
            cloneNode(this._code_),
            cloneNode(this._id_),
            cloneNode(this._bloco_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACodePrograma(this);
    }

    public TCode getCode()
    {
        return this._code_;
    }

    public void setCode(TCode node)
    {
        if(this._code_ != null)
        {
            this._code_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._code_ = node;
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public PBloco getBloco()
    {
        return this._bloco_;
    }

    public void setBloco(PBloco node)
    {
        if(this._bloco_ != null)
        {
            this._bloco_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._bloco_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._code_)
            + toString(this._id_)
            + toString(this._bloco_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._code_ == child)
        {
            this._code_ = null;
            return;
        }

        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._bloco_ == child)
        {
            this._bloco_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._code_ == oldChild)
        {
            setCode((TCode) newChild);
            return;
        }

        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(this._bloco_ == oldChild)
        {
            setBloco((PBloco) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
