/* This file was generated by SableCC (http://www.sablecc.org/). */

package analysis;

import node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseACodePrograma(ACodePrograma node);
    void caseABlocoBloco(ABlocoBloco node);
    void caseAInicialize(AInicialize node);
    void caseATipoDeclaracao(ATipoDeclaracao node);
    void caseAUnaltDeclaracao(AUnaltDeclaracao node);
    void caseAMultiVar(AMultiVar node);
    void caseAMultiExp(AMultiExp node);
    void caseAMultiId(AMultiId node);
    void caseAMultiPos(AMultiPos node);
    void caseAIntegerTipoBase(AIntegerTipoBase node);
    void caseARealTipoBase(ARealTipoBase node);
    void caseASymbolTipoBase(ASymbolTipoBase node);
    void caseATipoBaseTipo(ATipoBaseTipo node);
    void caseAVectorTipo(AVectorTipo node);
    void caseAAddPosAddPos(AAddPosAddPos node);
    void caseAIdVar(AIdVar node);
    void caseAIdposVar(AIdposVar node);
    void caseAVarUnalt(AVarUnalt node);
    void caseAValor(AValor node);
    void caseACaractereValor(ACaractereValor node);
    void caseANumeroValor(ANumeroValor node);
    void caseARealValor(ARealValor node);
    void caseAPalavraValor(APalavraValor node);
    void caseACpyComando(ACpyComando node);
    void caseAConstComando(AConstComando node);
    void caseACaptureComando(ACaptureComando node);
    void caseAShowComando(AShowComando node);
    void caseAInCaseThatComando(AInCaseThatComando node);
    void caseAAsLongAsComando(AAsLongAsComando node);
    void caseAConsideringComando(AConsideringComando node);
    void caseABlocoComando(ABlocoComando node);
    void caseAFatorExp(AFatorExp node);
    void caseASomaExp(ASomaExp node);
    void caseASubtracaoExp(ASubtracaoExp node);
    void caseARecExp(ARecExp node);
    void caseARecConstExp(ARecConstExp node);
    void caseAMaiorExp(AMaiorExp node);
    void caseAMenorExp(AMenorExp node);
    void caseANegacaoExp(ANegacaoExp node);
    void caseAEExp(AEExp node);
    void caseAOuExp(AOuExp node);
    void caseAIgualExp(AIgualExp node);
    void caseAMaiorigualExp(AMaiorigualExp node);
    void caseAMenorigualExp(AMenorigualExp node);
    void caseADiferenteExp(ADiferenteExp node);
    void caseATermoFator(ATermoFator node);
    void caseAMultiplicacaoFator(AMultiplicacaoFator node);
    void caseADivisaoFator(ADivisaoFator node);
    void caseAModuloFator(AModuloFator node);
    void caseAValorTermo(AValorTermo node);
    void caseAVarTermo(AVarTermo node);
    void caseAParTermo(AParTermo node);

    void caseTReal(TReal node);
    void caseTInteger(TInteger node);
    void caseTSymbol(TSymbol node);
    void caseTVector(TVector node);
    void caseTCode(TCode node);
    void caseTStart(TStart node);
    void caseTFinish(TFinish node);
    void caseTUnalterable(TUnalterable node);
    void caseTIn(TIn node);
    void caseTCase(TCase node);
    void caseTThat(TThat node);
    void caseTDo(TDo node);
    void caseTElse(TElse node);
    void caseTAs(TAs node);
    void caseTLong(TLong node);
    void caseTConsidering(TConsidering node);
    void caseTFrom(TFrom node);
    void caseTTo(TTo node);
    void caseTBy(TBy node);
    void caseTCapture(TCapture node);
    void caseTShow(TShow node);
    void caseTPlus(TPlus node);
    void caseTMinus(TMinus node);
    void caseTMult(TMult node);
    void caseTDiv(TDiv node);
    void caseTMod(TMod node);
    void caseTRecebe(TRecebe node);
    void caseTRecebeConst(TRecebeConst node);
    void caseTGreater(TGreater node);
    void caseTLesser(TLesser node);
    void caseTNot(TNot node);
    void caseTAnd(TAnd node);
    void caseTOr(TOr node);
    void caseTXor(TXor node);
    void caseTTwoequal(TTwoequal node);
    void caseTGoe(TGoe node);
    void caseTLoe(TLoe node);
    void caseTDiff(TDiff node);
    void caseTLPar(TLPar node);
    void caseTRPar(TRPar node);
    void caseTLCom(TLCom node);
    void caseTRCom(TRCom node);
    void caseTLCol(TLCol node);
    void caseTRCol(TRCol node);
    void caseTPpv(TPpv node);
    void caseTVir(TVir node);
    void caseTId(TId node);
    void caseTChar(TChar node);
    void caseTNumber(TNumber node);
    void caseTString(TString node);
    void caseTFloat(TFloat node);
    void caseTBlank(TBlank node);
    void caseTComment(TComment node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
